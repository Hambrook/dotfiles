# Most of these are from: https://github.com/jfrazelle/dotfiles/blob/master/.dockerfunc

# Ensure that these apps can access the host display
xhost +local:docker > /dev/null

###
###=== CONTAINED ================================================================
##

### atom             Run the Atom editor
##   ~ atom
##
function atom() {
	docker run -d \
		-v /tmp/.X11-unix/:/tmp/.X11-unix/ \
		-v /dev/shm:/dev/shm \
		-v ${HOME}/.atom:/.atom \
		-v ${PWD}:${PWD} \
		-e DISPLAY \
		jamesnetherton/docker-atom-editor
}

### aws              Run AWS CLI client
##   ~ aws help
##
aws(){
	docker run -it --rm \
		-v "${HOME}/.aws:/root/.aws" \
		--log-driver none \
		--name aws \
		jess/awscli "$@"
}

### bower            Run Bower
##   ~ bower
##
function bower() {
	node-tools bower $@
}

### chrome           Run Google Chrome
##   ~ chrome
##   ~ chrome tor  # to route through torproxy
##
function chrome() {
	# add flags for proxy if passed
	local proxy=
	local map=
	local args=$* #$@

	# Come back to tor support
	if [[ "$1" == "tor" ]]; then
		d_relies_on torproxy

		map="MAP * ~NOTFOUND , EXCLUDE torproxy"
		proxy="socks5://torproxy:9050"
		args="https://check.torproject.org/api/ip ${*:2}" # ${@:2}
	fi

	d_del_stopped chrome

	# one day remove /etc/hosts bind mount when effing
	# overlay support inotify, such bullshit
	docker run \
		--memory 3gb \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=unix${DISPLAY} \
		-v ${HOME}/Downloads:/root/Downloads \
		-v ${HOME}/Pictures:/root/Pictures \
		-v ${HOME}/Torrents:/root/Torrents \
		-v ${HOME}/.chrome:/data \
		-v /dev/shm:/dev/shm \
		-v /etc/hosts:/etc/hosts \
		--security-opt seccomp:${DOTFILESHOME}/docker/seccomp/chrome.json \
		--device /dev/snd \
		--device /dev/dri \
		--device /dev/video0 \
		--device /dev/usb \
		--device /dev/bus/usb \
		--group-add audio \
		--group-add video \
		--cap-add=SYS_ADMIN \
		--name chrome \
		jess/chrome \
		--user-data-dir=/data \
		--proxy-server="$proxy" \
		--host-resolver-rules="$map" $args
}

### chromium         Run Google Chromium
##   ~ chromium
##
function chromium() {
	# add flags for proxy if passed
	local proxy=
	local map=
	local args=$@

	# Come back to tor support
	if [[ "$1" == "tor" ]]; then
		d_relies_on torproxy

		map="MAP * ~NOTFOUND , EXCLUDE torproxy"
		proxy="socks5://torproxy:9050"
		args="https://check.torproject.org/api/ip ${@:2}"
	fi

	d_del_stopped chromium

	# one day remove /etc/hosts bind mount when effing
	# overlay support inotify, such bullshit
	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=unix$DISPLAY \
		-v $HOME/Downloads:/root/Downloads \
		-v $HOME/Pictures:/root/Pictures \
		-v $HOME/Torrents:/root/Torrents \
		-v $HOME/.chromium:/data \
		-v /dev/shm:/dev/shm \
		-v /etc/hosts:/etc/hosts \
		--device /dev/snd \
		--device /dev/dri \
		--device /dev/video0 \
		--device /dev/usb \
		--device /dev/bus/usb \
		--group-add audio \
		--group-add video \
		--name chromium \
		jess/chromium --user-data-dir=/data \
		--proxy-server="$proxy" \
		--host-resolver-rules="$map" $args
}

### compass          Run Compass
##   ~ compass compile
##
function compass() {
	docker run \
		--rm -it \
		--name compass \
		--user $(id -u):$(id -g) \
		-v $(pwd):/src \
		-w /src \
		bhrutledge/compass $@
}

### composer         Run Composer with PHP7
##   ~ composer install
##   + composer7
##
function composer() {
	local PHPVER="7.2"
	local PARAM_FIRST=""
	if [[ "$1" == "install" || "$1" == "remove" || "$1" == "require" || "$1" == "update" ]]; then
		PARAM_FIRST="--ignore-platform-reqs"
	fi
	docker run \
		--rm \
		-it \
		-v $(pwd):/app \
		-v ~/.config/composer:/root/composer \
		prooph/composer:$PHPVER $PARAM_FIRST $@
}
alias composer7="composer"

### composer71       Run Composer with PHP7.1
##   ~ composer71 install
##
function composer71() {
	local PHPVER="7.1"
	local PARAM_FIRST=""
	if [[ "$1" == "install" || "$1" == "remove" || "$1" == "require" || "$1" == "update" ]]; then
		PARAM_FIRST="--ignore-platform-reqs"
	fi
	docker run \
		--rm \
		-it \
		-v $(pwd):/app \
		-v ~/.config/composer:/root/composer \
		prooph/composer:$PHPVER $PARAM_FIRST $@
}

### composer5        Run Composer with PHP5
##   ~ composer5 install
##
function composer5() {
	local PARAM_FIRST=""
	if [[ "$1" == "install" || "$1" == "remove" || "$1" == "require" || "$1" == "update" ]]; then
		PARAM_FIRST="--ignore-platform-reqs"
	fi
	docker run \
		--rm -it \
		--name composer \
		--user $(id -u):$(id -g) \
		-v $(pwd):/app \
		-v ~/.ssh:/root/.ssh:ro \
		-v /etc/passwd:/etc/passwd:ro \
		-v /etc/group:/etc/group:ro \
		composer/composer:php5-alpine $PARAM_FIRST $@
}

### curlt            Run cURL through Tor
##   ~ curlt
##
function curlt() {
	d_relies_on torproxy
	proxy="torproxy:9050"
	curl --socks5-hostname $proxy $@
}

### dropbox          Run Dropbox
##   ~ dropbox (on first run be sure to run "docker logs -f dropbox" and activate it via the link shown)
##
function dropbox() {
	docker run -d \
		--restart=always \
		--name=dropbox \
		-e UID=`id -u`  \
		-e GID=`id -g` \
		-v ~/Dropbox:/dbox/Dropbox \
		-v ~/.dropbox:/dbox/.dropbox \
		axllent/alpine-dropbox
}

### firefox          Run Firefox
##   ~ firefox
##
function firefox() {
	d_del_stopped firefox

	docker run -d \
		--memory 2gb \
		--net host \
		--cpuset-cpus 0 \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-v $HOME/.firefox/cache:/root/.cache/mozilla \
		-v $HOME/.firefox/mozilla:/root/.mozilla \
		-v $HOME/Downloads:/root/Downloads \
		-v $HOME/Pictures:/root/Pictures \
		-v $HOME/Torrents:/root/Torrents \
		-e DISPLAY=unix$DISPLAY \
		-e GDK_SCALE \
		-e GDK_DPI_SCALE \
		--device /dev/snd \
		--device /dev/dri \
		--name firefox \
		hambrook/firefox "$@"
}

### gimp             Run Gimp
##   ~ gimp
##
function gimp() {
	d_del_stopped gimp

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=unix$DISPLAY \
		-v $HOME/Pictures:/root/Pictures \
		-v $HOME/.gtkrc:/root/.gtkrc \
		-e GDK_SCALE \
		-e GDK_DPI_SCALE \
		--name gimp \
		jess/gimp
}

### gulp             Run Gulp
##   ~ gulp
##
function gulp() {
	node-tools gulp $@
}

### node             Run Node
##   ~ node
##
function node() {
	node-tools node $@
}

### npm              Run NPM
##   ~ npm
##
function npm() {
	node-tools npm $@
}

### node-tools       Run container with Gulp, NPM, Grunt, etc
##   ~ node-tools
##
function node-tools() {
	docker run \
		--rm \
		-it \
		-v $(pwd):/workspace:rw \
		monostream/nodejs-gulp-bower $@
}

### php              Run PHP CLI
##   ~ php index.php
##
function php() {
	# Alternative: https://hub.docker.com/r/lucor/php7-cli/
	TAG=7-cli-alpine3.7 #7.0-cli
	docker run \
		-it \
		--rm \
		--name php-cli \
		-v "$PWD":/usr/src/myapp \
		-w /usr/src/myapp \
		php:$TAG \
		php $@
}

### phpcs            Run phpcs (PHP Code Sniffer) on the current directory
##   ~ phpcs [options]
##
function phpcs() {
	docker run \
		--rm \
		--name phpcs \
		-v $(pwd):/project \
		herloct/phpcs $@
}

### phpmd            Run phpmd (PHP Mess Detecter) on the current directory
##   ~ phpmd [options]
##
function phpmd() {
	docker run \
		--rm \
		--name phpmd \
		-it \
		-v $(pwd):/workspace \
		denisura/phpmd $@
}

### phpunit          Run phpunit
##   ~ phpunit
##
function phpunit() {
	docker run \
	--rm \
	--name phpunit \
	-v $(pwd):/app \
	phpunit/phpunit $@
}

### sass             Run sass to build assets
##   ~ sass
##   ~ sass --style compressed --watch app/sass/styles.scss:app/css/styles.css
##
function sass() {
	docker run \
		-u `id -u $USER` \
		-e LOCAL_USER_ID=`id -u $USER` \
		-v $(pwd):/app \
		ubuntudesign/sass \
		sass $@
}

### slack            Run Slack
##   ~ slack
##
function slack() {
	d_del_stopped slack

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e "DISPLAY=unix${DISPLAY}" \
		--device /dev/snd \
		--device /dev/dri \
		--device /dev/video0 \
		--group-add audio \
		--group-add video \
		-v "${HOME}/.slack:/root/.config/Slack" \
		--ipc="host" \
		--name slack \
		jess/slack "$@"
}

### spotify          Run Spotify
##   ~ spotify
##
function spotify() {
	d_del_stopped spotify

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e "DISPLAY=unix${DISPLAY}" \
		-e QT_DEVICE_PIXEL_RATIO \
		--security-opt seccomp:unconfined \
		--device /dev/snd \
		--device /dev/dri \
		--group-add audio \
		--group-add video \
		--name spotify \
		jess/spotify
}

### tor              Run Tor
##   ~ tor
##
function tor() {
	d_del_stopped tor

	docker run -d \
		--net host \
		--name tor \
		jess/tor

	# set up the redirect iptables rules
	sudo setup-tor-iptables

	# validate we are running through tor
	browser-exec "https://check.torproject.org/"
}

### torbrowser       Run Tor Browser (configured Firefox)
##   ~ torbrowser
##
function torbrowser() {
	d_del_stopped torbrowser

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=unix$DISPLAY \
		-e GDK_SCALE \
		-e GDK_DPI_SCALE \
		--device /dev/snd \
		--name torbrowser \
		jess/tor-browser
}

### torproxy         Run Tor Proxy for use by other containers
##   ~ torproxy
##
function torproxy() {
	d_del_stopped torproxy

	docker run -d \
		--restart always \
		--log-driver none \
		-v /etc/localtime:/etc/localtime:ro \
		-p 9050:9050 \
		--name torproxy \
		jess/tor-proxy

	d_add_host_entry torproxy
}

### transmission     Run Transmission
##   ~ transmission
##
function transmission() {
	d_del_stopped transmission

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v $HOME/Torrents:/transmission/download \
		-v $HOME/.transmission:/transmission/config \
		-p 9091:9091 \
		-p 51413:51413 \
		-p 51413:51413/udp \
		--name transmission \
		jess/transmission

	d_add_host_entry transmission
	browser-exec "http://transmission:9091"
}

### unifi            Run Unifi server
##   ~ unifi
##
function unifi() {
	d_del_stopped unifi

	docker run -d \
		--net=host \
		--name=unifi \
		--userns=host \
		jacobalberty/unifi:latest
}

### virtualbox       Run VirtualBox
##   ~ virtualbox
##
function virtualbox() {
	d_del_stopped virtualbox

	# modprobe the module
	sudo modprobe vboxdrv
	# and the extras for networking
	sudo insmod /lib/modules/$(uname -r)/misc/vboxnet*.ko

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix  \
		-e DISPLAY=unix$DISPLAY \
		-e GDK_SCALE \
		-e GDK_DPI_SCALE \
		--name virtualbox \
		--net host \
		-v "$HOME/.vbox/vms:/root/VirtualBox VMs" \
		-v $HOME/.vbox/config:/root/.config/VirtualBox \
		--privileged \
		jess/virtualbox
}

### wireshark        Run Wireshark
##   ~ wireshark
##
function wireshark() {
	d_del_stopped wireshark

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=unix$DISPLAY \
		--net host \
		--name wireshark \
		jess/wireshark
}

### vscode           Run Visual Studio Code
##   ~ vscode
##
vscode(){
	del_stopped vscode

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix  \
		-e "DISPLAY=unix${DISPLAY}" \
		--name vscode \
		jess/vscode
}

### vlc              Run VLC
##   ~ vlc
##
function vlc() {
	d_del_stopped vlc
	d_relies_on pulseaudio

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e "DISPLAY=unix${DISPLAY}" \
		-e GDK_SCALE \
		-e GDK_DPI_SCALE \
		-e QT_DEVICE_PIXEL_RATIO \
		--link pulseaudio:pulseaudio \
		-e PULSE_SERVER=pulseaudio \
		--group-add audio \
		--group-add video \
		-v "${HOME}/Torrents:/home/vlc/Torrents" \
		--device /dev/dri \
		--name vlc \
		jess/vlc
}
