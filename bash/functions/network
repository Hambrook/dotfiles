###
###=== NETWORK ==================================================================

# DECICES ON LOCAL NETWORK
### onlan            Show devices on LAN
alias onlan="sudo netdiscover -r 192.168.1.0/24 -i wlp2s0"

# DECICES ON LOCAL NETWORK (QUICK)
### onlanq           Show devices on LAN (quick)
alias onlanq="arp -a"

# MY IP

### lip              Show local IP addresses
alias lip="ifconfig | sed -En 's/127.0.0.1//;s/.*Loopback.*//;s/(^[^ ]+) +Link encap.*/\n\1/p;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'"

### pip              Show public IP address
alias pip="curl ipecho.net/plain ; echo"

# PING FIVE TIMES ONLY
### ping5            Ping five times only
###  + p5
##   ~ ping5 <hostname>
##   ~ ping5 github.com
alias ping5="ping -c 5"
alias p5="ping5"

### urle             URL encode some text
function urle() {
	php -r "echo urlencode('$@').\"\n\";"
}

### addhost          URL encode some text
##   ~ addhost <hostname> [<ip>]
##   ~ addhost mytestdefaulttolocal
##   ~ addhost mytestmanual 192.168.0.1
# Adapted from: https://gist.github.com/irazasyed/a7b0a079e7727a4315b9
function addhost() {
	HOSTNAME=$1
	IP=${2:-"127.0.0.1"}
	HOSTS_LINE="$IP\t$HOSTNAME"

	# Remove it if it's already there so we can update
	if [ -n "$(grep $HOSTNAME /etc/hosts)" ]; then
		removehost "$HOSTNAME"
	fi

	printf "Adding $HOSTNAME to your /etc/hosts\n";
	sudo -- sh -c -e "echo '$HOSTS_LINE' >> /etc/hosts";

	if [ -n "$(grep $HOSTNAME /etc/hosts)" ]; then
		printf "%s was added succesfully \n\t%s\n" "$HOSTNAME" "$(grep $HOSTNAME /etc/hosts)";
	else
		printf "Failed to Add %s, Try again!\n" "$HOSTNAME";
	fi
}

function hashost() {
	HOSTNAME=$1
	if [ -n "$(grep $HOSTNAME /etc/hosts)" ]; then
		printf "%s exists: \n\t%s\n" "$HOSTNAME" "$(grep $HOSTNAME /etc/hosts)";
	else
		printf "%s does not exist\n" "$HOSTNAME";
	fi
}

### removehost       URL encode some text
##   ~ removehost <hostname>
##   ~ removehost mytest
# Adapted from: https://gist.github.com/irazasyed/a7b0a079e7727a4315b9
function removehost() {
	HOSTNAME="$1"
	if [ -n "$(grep $HOSTNAME /etc/hosts)" ]; then
		printf "Found %s in your /etc/hosts, Removing now...\n" "$HOSTNAME";
		sudo sed -i".bak" "/$HOSTNAME/d" /etc/hosts
	else
		printf "%s was not found in your /etc/hosts\n" "$HOSTNAME";
	fi
}

function hostess() {
	case "$1" in
		add)
			addhost "$2" "$3"
			;;
		remove)
			removehost "$2"
			;;
		*)
			echo "Add and remove entries from the hosts file"
			echo
			echo "Usage: hostess [add|remove] [hostname] [ip]"
			echo
			echo "IP defaults to 127.0.0.1"
			echo
			echo "Examples:"
			echo -e "\thostess add testing.com"
			echo -e "\thostess remove testing.com 192.168.1.1"
			;;
	esac
}